
@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>
<input type="text" id="text01" />
<button class="btn btn-primary" id="button1">開始</button>
<button class="btn btn-danger" id="button2">停止</button>
<div id="div01" class="alert-info mt-3 p-3 w-25"></div>
@section Scripts{
    <script>
      const btn = document.querySelector('#button1');
        const btnStop = document.querySelector('#button2');
        const theDiv = document.querySelector("#div01");
        const txt =document.querySelector("#text01")

        const xhr = new XMLHttpRequest();

        //Ajax開始
        xhr.addEventListener("loadstart", function () {
            btn.textContent = "執行中....";
            btn.setAttribute('disabled', 'disabled');
            theDiv.innerHTML += `Ajax開始<br>`
        })


        //步驟三接收伺服器回傳的結果
        xhr.addEventListener('load', () => {
            //接收資料
            const data = xhr.responseText;
            //顯示資料
            theDiv.innerHTML += `<h2>${data}</h2>`
        })

        //Ajax結束
        xhr.addEventListener('loadend', function () {
            btn.textContent = "Click";
            btn.removeAttribute('disabled');
            theDiv.innerHTML += `Ajax結束<br>`
        })
        xhr.addEventListener('timeout', () => {
            theDiv.innerHTML += `伺服器忙碌中，請稍後再來<br>`
        })
        xhr.addEventListener('abort',()=>{
            theDiv.innerHTML += `您停止了程式的執行<br>`
        })


        btnStop.addEventListener('click',()=>{
            xhr.abort();//停止Ajax的呼叫
        })


        btn.addEventListener(`click`,()=>{
            //步驟一建立Ajax物件

  //步驟二發出要求
       //open("Http Method(GET、POST、PUT、DELETE)", "伺服器端的程式", 同步或非同步(預設))
       xhr.open("GET",`/Api/index?name=${txt.value}`);
       xhr.timeout=3000;
       xhr.send();

        })
      
    </script>
}